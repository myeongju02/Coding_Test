## 상품 이름에 중복되는 글자가 있는 경우 고려하지 못함
## banana와 bananakick이 있는 경우

import java.util.*;

class Solution {
    public int solution(String[] want, int[] number, String[] discount) {
        int answer = 0;
        boolean flag=true;
        for(int i=0;i<number.length;i++) {
            String[] slice = Arrays.copyOfRange(discount, i, i+10);
            for(int j=0;j<want.length;j++) {
                if(Collections.frequency(Arrays.asList(slice), want[j]) < number[j]) {
                    flag = false;
                    break;
                }
            }
            if(flag) answer++;
            else flag = true;
        }
        return answer;
    }
}


##HashMap 사용
import java.util.*;

class Solution {
    public int solution(String[] want, int[] number, String[] discount) {
        Map<String,Integer> map = new HashMap<>();
        for(int i=0;i<want.length;i++){
            map.put(want[i],number[i]);
        }
        Map<String,Integer> copy = new HashMap<>();
        int cnt=0;

        for(int i=0;i<=discount.length-10;i++){
            copy = new HashMap<>();
            copy.putAll(map);
      
            for(int j=i;j<i+10;j++){
                String key = discount[j];
                if(copy.containsKey(key)){
                    if(copy.get(key)-1==0) copy.remove(key);
                    else copy.put(key,copy.get(key)-1);
                }
            }
            if(copy.size()==0) cnt++;
        }
        return cnt;
    }
}
